
package it.water.connectors.ethereum.service.rest;

import it.water.connectors.ethereum.api.SmartContractApi;
import it.water.connectors.ethereum.api.rest.SmartContractRestApi;
import it.water.connectors.ethereum.model.EthSmartContract;
import it.water.core.api.service.BaseEntityApi;
import it.water.core.api.service.rest.FrameworkRestController;
import it.water.core.interceptors.annotations.Inject;
import it.water.service.rest.persistence.BaseEntityRestApi;
import lombok.Setter;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * @Generated by Water Generator
 *            Rest Api Class for EthereumConnector entity.
 *
 */
@FrameworkRestController(referredRestApi = SmartContractRestApi.class)
public class EthSmartContractRestControllerImpl extends BaseEntityRestApi<EthSmartContract>
        implements SmartContractRestApi {
    @SuppressWarnings({ "java:S1068", "unused" }) // still mantain the variable even if not used
    private static Logger log = LoggerFactory.getLogger(EthSmartContractRestControllerImpl.class.getName());

    @Inject
    @Setter
    private SmartContractApi ethSmartContractApi;

    @Override
    protected BaseEntityApi<EthSmartContract> getEntityService() {
        return ethSmartContractApi;
    }

}
